{"version":3,"sources":["src/model/shape.ts","src/util/color.ts","src/util/index.ts","src/model/piece.ts","src/model/event.ts","src/model/board.ts","src/util/keys.ts","src/index.ts"],"names":[],"mappings":"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","file":"cd8a7dbfe00fa1bc3956ae5c9aabab45.map","sourcesContent":["// min of 3x3, can be larger\nexport interface Shape extends Array<number[]> {\n  0: [number, number, number]\n  1: [number, number, number]\n  2: [number, number, number]\n}\n\nexport enum TetrominoType {\n  SQUARE = 1,\n  LINE,\n  L,\n  J,\n  T,\n  S,\n  Z\n}\n\n/**\n * Each shape is stored in a 5x5 array because the 4x4 piece moves when rotated.\n * Each rotation of the shape is stored in each object.\n */\nexport const Shapes = {\n  [TetrominoType.SQUARE]: [\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 0],\n    ] as Shape,\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 0],\n    ] as Shape,\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 0],\n    ] as Shape,\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 0],\n    ] as Shape\n  ],\n  [TetrominoType.LINE]: [\n    [\n      [0, 0, 0, 0],\n      [2, 2, 2, 2],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ] as Shape,\n    [\n      [0, 0, 2, 0],\n      [0, 0, 2, 0],\n      [0, 0, 2, 0],\n      [0, 0, 2, 0],\n    ] as Shape,\n    [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [2, 2, 2, 2],\n      [0, 0, 0, 0],\n    ] as Shape,\n    [\n      [0, 2, 0, 0],\n      [0, 2, 0, 0],\n      [0, 2, 0, 0],\n      [0, 2, 0, 0],\n    ] as Shape\n  ],\n  [TetrominoType.L]: [\n    [\n      [0, 0, 3],\n      [3, 3, 3],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 3, 0],\n      [0, 3, 0],\n      [0, 3, 3]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [3, 3, 3],\n      [3, 0, 0]\n    ] as Shape,\n    [\n      [3, 3, 0],\n      [0, 3, 0],\n      [0, 3, 0]\n    ] as Shape\n  ],\n  [TetrominoType.J]: [\n    [\n      [4, 0, 0],\n      [4, 4, 4],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 4, 4],\n      [0, 4, 0],\n      [0, 4, 0]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [4, 4, 4],\n      [0, 0, 4]\n    ] as Shape,\n    [\n      [0, 4, 0],\n      [0, 4, 0],\n      [4, 4, 0]\n    ] as Shape\n  ],\n  [TetrominoType.S]: [\n    [\n      [0, 5, 5],\n      [5, 5, 0],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 5, 0],\n      [0, 5, 5],\n      [0, 0, 5]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [0, 5, 5],\n      [5, 5, 0]\n    ] as Shape,\n    [\n      [5, 0, 0],\n      [5, 5, 0],\n      [0, 5, 0]\n    ] as Shape\n  ],\n  [TetrominoType.Z]: [\n    [\n      [6, 6, 0],\n      [0, 6, 6],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 0, 6],\n      [0, 6, 6],\n      [0, 6, 0]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [6, 6, 0],\n      [0, 6, 6]\n    ] as Shape,\n    [\n      [0, 6, 0],\n      [6, 6, 0],\n      [6, 0, 0]\n    ] as Shape\n  ],\n  [TetrominoType.T]: [\n    [\n      [0, 7, 0],\n      [7, 7, 7],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 7, 0],\n      [0, 7, 7],\n      [0, 7, 0]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [7, 7, 7],\n      [0, 7, 0]\n    ] as Shape,\n    [\n      [0, 7, 0],\n      [7, 7, 0],\n      [0, 7, 0]\n    ] as Shape\n  ]\n}\n","export enum Colors {\n  red = 1, blue, green, brown, purple, aqua, orange\n}\n\nexport const Backgrounds = [\n  \"#ffffff\",\n  \"#52aced\",\n  \"#388601\",\n  \"#30f894\",\n  \"#550918\",\n  \"#917232\",\n  \"#ad18dc\",\n  \"#6181d9\",\n  \"#97226e\",\n  \"#e0a60a\",\n  \"#340770\",\n]","import { Colors } from './color'\nimport { Piece } from '../model/piece'\n\nexport function addClass(node: HTMLElement, classes: string) {\n  if (node.className) {\n    node.className += \" \" + classes\n  } else {\n    node.className = classes\n  }\n}\n\nexport function drawSquare(x: number, y: number, ctx: CanvasRenderingContext2D, size: number) {\n  ctx.fillRect(x * size, y * size, size, size)\n  const ss = ctx.strokeStyle\n  ctx.strokeStyle = \"#222222\"\n  ctx.strokeRect(x * size, y * size, size, size)\n  ctx.strokeStyle = ss\n}\n\nexport function clearNextPiece(ctx: CanvasRenderingContext2D, p: Piece) {\n  for (let r = 0; r < 3; r++) {\n    for (let c = 0; c < 4; c++) {\n      ctx.fillStyle = \"white\"\n      ctx.fillRect(c * p.size, r * p.size, p.size, p.size)\n    }\n  }\n}\n\nexport function drawNextPiece(ctx: CanvasRenderingContext2D, p: Piece) {\n  const fillStyle = Colors[p.type]\n  for (let r = 0; r < 3; r++) {\n    for (let c = 0; c < 4; c++) {\n      if (p.shape[r] && p.shape[r][c]) {\n        if (p.shape[r][c] > 0) {\n          ctx.fillStyle = fillStyle\n          drawSquare(c, r, ctx, p.size)\n        }\n      }\n    }\n  }\n}","import { TetrominoType, Shape, Shapes } from './shape'\nimport { Colors } from '../util/color'\nimport { drawSquare } from '../util'\n\nexport class Piece {\n  type: TetrominoType\n  boardWidth: number\n  size: number\n  \n  rotation: number\n  shape: Shape\n  row: number\n  col: number\n  color: string\n\n  constructor(type: TetrominoType,\n              boardWidth: number,\n              size: number) {\n\n    this.type = type\n    this.boardWidth = boardWidth\n    this.size = size\n\n    this.rotation = 0\n    this.color = Colors[this.type]\n    this.shape = Shapes[this.type][this.rotation]\n    this.row = -1 // y\n    this.col = (this.boardWidth / 2) - Math.ceil(this.shape.length / 2); // x\n  }\n\n  public draw(ctx: CanvasRenderingContext2D) {\n    this.fill(ctx, Colors[this.type])\n  }\n\n  public left(ctx: CanvasRenderingContext2D) {\n    this.clear(ctx)\n    this.col--\n    this.draw(ctx)\n  }\n\n  public right(ctx: CanvasRenderingContext2D) {\n    this.clear(ctx)\n    this.col++\n    this.draw(ctx)\n  }\n\n  public down(ctx: CanvasRenderingContext2D) {\n    this.clear(ctx)\n    this.row++\n    this.draw(ctx)\n  }\n\n  public hardDown(ctx: CanvasRenderingContext2D, dy: number) {\n    this.clear(ctx)\n    this.row += dy - 1\n    this.draw(ctx)\n  }\n\n  public rotate(ctx: CanvasRenderingContext2D, nudge: number) {\n    this.clear(ctx)\n    this.col += nudge\n    this.rotation = (this.rotation + 1) % 4\n    this.shape = Shapes[this.type][this.rotation]\n    this.draw(ctx)\n  }\n  \n  /**\n   * Draw the piece onto the board (once it can no longer move).\n   * @param setOnBoard Function to draw onto the board\n   */\n  public set(setOnBoard: Function) {\n    for (let r = 0; r < this.shape.length; r++) {\n      for (let c = 0; c < this.shape.length; c++) {\n        if (!this.shape[r][c]) continue\n        setOnBoard(this.row + r, this.col + c, this.type)\n      }\n    }\n  }\n\n  /**\n   * Check if the piece is at the top of the board, and if\n   * therefore it should be game over.\n   */\n  public isAtTop() {\n    for (let r = 0; r < this.shape.length; r++) {\n      for (let c = 0; c < this.shape.length; c++) {\n        if (!this.shape[r][c]) continue\n        if (this.row + r <= 0) return true\n      }\n    }\n    return false\n  }\n\n  public static getRandomType(): number {\n    return Math.floor(Math.random() * 7) + 1\n  }\n\n  public static randomPiece(boardWidth: number, size: number): Piece {\n    const newType = Piece.getRandomType()\n    return new Piece(\n      newType,\n      boardWidth,\n      size\n    )\n  }\n  \n  private fill(ctx: CanvasRenderingContext2D, fillstyle: string) {\n    for (let r = 0; r < this.shape.length; r++) {\n      for (let c = 0; c < this.shape.length; c++) {\n        let cell = this.shape[r][c]\n        if (cell > 0) {\n          ctx.fillStyle = fillstyle\n          drawSquare(this.col + c, this.row + r, ctx, this.size)\n        }\n      }\n    }\n  }\n  \n  private clear(ctx: CanvasRenderingContext2D) {\n    this.fill(ctx, \"white\")\n  }\n}","export enum GameEvent {\n  PAUSE,\n  UNPAUSE,\n  START,\n  RESTART,\n  GAME_OVER,\n  MOVE_LEFT,\n  MOVE_RIGHT,\n  MOVE_DOWN,\n  HARD_DOWN,\n  ROTATE,\n  AUDIO_STOP,\n  AUDIO_START,\n}","import { TetrominoType, Shape, Shapes } from './shape'\nimport { addClass, drawSquare } from '../util'\nimport { Colors } from '../util/color'\nimport { Piece } from './piece';\nimport { Keys } from '../util/keys'\nimport { GameEvent } from './event';\n\n// For now, equivalent to number[][] but may introduce stricter typing\n// i.e. [22][10], 22 rows of width 10\nexport interface BoardGrid extends Array<Array<number>> {}\n\nexport class Board {\n  grid: BoardGrid\n  width: number\n  height: number\n  container: HTMLCanvasElement\n  ctx: CanvasRenderingContext2D\n  tileSize: number // in px\n  activePiece: Piece\n  \n  constructor(\n    container: HTMLCanvasElement,\n    width: number,\n    height: number,\n    tileSize: number\n  ) {\n    this.width = width\n    this.height = height\n    this.container = container\n    this.ctx = this.container.getContext('2d') as CanvasRenderingContext2D\n\n    this.tileSize = tileSize\n    this.container.width = (this.width * this.tileSize)\n    this.container.height = (this.height * this.tileSize)\n    this.grid = this.initGrid()\n  }\n\n  public draw() {\n    for (let r = 0; r < this.height; r++) {\n      let row = this.grid[r]\n      \n      for (let c = 0; c < this.width; c++) {\n        let cell = row[c]\n\n        this.ctx.fillStyle = cell > 0 ? Colors[cell] : \"white\"\n        drawSquare(c, r, this.ctx, this.tileSize)\n      }\n    }\n    this.activePiece.draw(this.ctx)\n  }\n\n  public clearLines(): number {\n    let numLines = 0\n\n    for (let row = 0; row < this.height; row++) {\n      let line = this.grid[row].filter(el => el === 0).length === 0\n\n      if (line) {\n        numLines++\n\n        for (let r = row; r > 0; r--) {\n          for (let c = 0; c < this.width; c++) {\n            this.grid[r][c] = this.grid[r-1][c]\n          }\n        }\n        for (let c = 0; c < this.width; c++) {\n          this.grid[0][c] = 0\n        }\n      }\n    }\n    return numLines\n  }\n  \n  /**\n   * Returns true if the piece is stuck and a new piece should be created\n   * @param event GameEvent\n   */\n  public handleEvent(event: GameEvent): boolean {\n    switch (event) {\n      case GameEvent.MOVE_LEFT: {\n        if (!this.collides(this.activePiece, -1, 0, this.activePiece.shape)) {\n          this.activePiece.left(this.ctx)\n        }\n        break\n      }\n      case GameEvent.MOVE_RIGHT: {\n        if (!this.collides(this.activePiece, 1, 0, this.activePiece.shape)) {\n          this.activePiece.right(this.ctx)\n        }\n        break\n      }\n      case GameEvent.MOVE_DOWN: {\n        if (this.collides(this.activePiece, 0, 1, this.activePiece.shape)) {\n          return true\n        }\n        this.activePiece.down(this.ctx)\n        break\n      }\n      case GameEvent.HARD_DOWN: {\n        let dy = 1\n        while (!this.collides(this.activePiece, 0, dy, this.activePiece.shape)) {\n          dy++\n        }\n        this.activePiece.hardDown(this.ctx, dy)\n        return true\n      }\n      case GameEvent.ROTATE: {\n        const nextRotationIx = (this.activePiece.rotation + 1) % 4\n        const nextRotation = Shapes[this.activePiece.type][nextRotationIx]\n        let nudge = 0\n    \n        if (this.collides(this.activePiece, 0, 0, nextRotation)) {\n          nudge = this.activePiece.col > this.width / 2 ? -1 : 1\n        }\n    \n        if (this.collides(this.activePiece, nudge, 0, nextRotation)) {\n          break\n        }\n\n        this.activePiece.rotate(this.ctx, nudge)\n        break\n      }\n      default: {\n        return false\n      }\n    }\n    return false\n  }\n\n  public reset() {\n    this.grid = this.initGrid()\n    this.activePiece = Piece.randomPiece(this.width, this.tileSize)\n  }\n\n  private initGrid(): BoardGrid {\n    let rows = []\n    for (let r = 0; r < this.height; r++) {\n      let cells = []\n      for (let c = 0; c < this.width; c++) {\n        cells.push(0)\n      }\n      rows.push(cells)\n    }\n\n    return rows\n  }\n\n  public movePieceDown(): boolean {\n    if (this.collides(this.activePiece, 0, 1, this.activePiece.shape)) {\n      return true\n    }\n    this.activePiece.down(this.ctx)\n    return false\n  }\n\n  public lockPiece() {\n    this.activePiece.set(this.setOnBoard.bind(this))\n  }\n\n  private setOnBoard(row: number, col: number, type: TetrominoType) {\n    this.grid[row][col] = type\n  }\n  \n  private collides(piece: Piece, dx: number, dy: number, nextShape: Shape) {\n    for (let r = 0; r < nextShape.length; r++) {\n      for (let c = 0; c < nextShape.length; c++) {\n        let cell = nextShape[r][c]\n        if (cell === 0) continue\n\n        let x = piece.col + c + dx\n        let y = piece.row + r + dy\n        if (y >= this.height || x < 0 || x >= this.width) {\n          return true\n        }\n        if (y < 0) continue\n        if (this.grid[y][x]) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n}","export enum Keys {\n  SPACE = 32,\n  UP = 38,\n  DOWN = 40,\n  LEFT = 37,\n  RIGHT = 39,\n  A = 65,\n  D = 68,\n  Q = 81,\n  S = 83,\n  W = 87,\n}","import { Board } from './model/board'\nimport { Piece } from './model/piece'\nimport { TetrominoType } from './model/shape'\nimport { Keys } from './util/keys'\nimport { Backgrounds } from './util/color'\nimport { Shapes } from './model/shape'\nimport { GameEvent } from './model/event'\nimport { clearNextPiece, drawNextPiece } from './util'\n\nclass Tetris {\n  width: number\n  height: number\n  tileSize: number\n  nextPiece: Piece\n  container: HTMLCanvasElement\n  nextPieceContainer: HTMLCanvasElement\n  board: Board\n  queuedActions: GameEvent[]\n  needNewPiece: boolean\n\n  audioPlaying: boolean\n  running: boolean\n  paused: boolean\n  level: number\n  lines: number\n  score: number\n  lastTick: number\n  dt: number\n  step: number\n\n  constructor(container: HTMLCanvasElement) {\n    this.container = container\n    this.width = 10\n    this.height = 20\n    this.tileSize = 32\n    this.board = new Board(this.container, this.width, this.height, this.tileSize)\n    this.nextPiece = Piece.randomPiece(this.width, this.tileSize)\n    this.nextPieceContainer = document.getElementById(\"nextpiece\") as HTMLCanvasElement\n    this.nextPieceContainer.width = (4 * this.tileSize)\n    this.nextPieceContainer.height = (3 * this.tileSize)\n    this.running = true\n    this.paused = false\n    this.audioPlaying = true\n    this.level = 0\n    this.lines = 0\n    this.score = 0\n    this.queuedActions = []\n    this.dt = 0\n    this.step = 1.1\n    this.needNewPiece = false\n  }\n\n  public start() {\n    this.getInput()\n    this.board.activePiece = this.nextPiece\n    this.nextPiece = Piece.randomPiece(this.width, this.tileSize)\n    this.drawNextPiece(this.nextPiece)\n\n    this.lastTick = performance.now()\n    requestAnimationFrame(this.loop.bind(this))\n  }\n\n  private getInput() {\n    document.body.addEventListener(\"keydown\", (e) => {\n      switch (e.keyCode) {\n        case Keys.A, Keys.LEFT: {\n          this.queuedActions.push(GameEvent.MOVE_LEFT)\n          break\n        }\n        case Keys.D, Keys.RIGHT: {\n          this.queuedActions.push(GameEvent.MOVE_RIGHT)\n          break\n        }\n        case Keys.W, Keys.UP: {\n          this.queuedActions.push(GameEvent.ROTATE)\n          break\n        }\n        case Keys.D, Keys.DOWN: {\n          this.queuedActions.push(GameEvent.MOVE_DOWN)\n          break\n        }\n        case Keys.SPACE: {\n          this.queuedActions.push(GameEvent.HARD_DOWN)\n          break\n        }\n        case Keys.Q: {\n          if (!this.running) return\n          if (this.paused) {\n            this.queuedActions.push(GameEvent.UNPAUSE)\n          } else {\n            this.queuedActions.push(GameEvent.PAUSE)\n          }\n          break\n        }\n      }\n    }, false)\n\n    const audioMutedButton = document.getElementById(\"btn-audio-muted\") as HTMLImageElement\n    const audioPlayingButton = document.getElementById(\"btn-audio-playing\") as HTMLImageElement\n    const pauseButton = document.getElementById(\"btn-pause\") as HTMLElement\n    const restartButton = document.getElementById(\"btn-restart\") as HTMLElement\n    const playAgainButton = document.getElementById(\"btn-playagain\") as HTMLElement\n\n    audioMutedButton.addEventListener(\"click\", (e) => {\n      this.queuedActions.push(GameEvent.AUDIO_START)\n    })\n    audioPlayingButton.addEventListener(\"click\", (e) => {\n      this.queuedActions.push(GameEvent.AUDIO_STOP)\n    })\n    pauseButton.addEventListener(\"click\", (e) => {\n      if (!this.running) return\n      if (this.paused) {\n        this.queuedActions.push(GameEvent.PAUSE)\n      } else {\n        this.queuedActions.push(GameEvent.UNPAUSE)\n      }\n    }, false)\n    restartButton.addEventListener(\"click\", (e) => {\n      this.queuedActions.push(GameEvent.RESTART)\n    }, false)\n    playAgainButton.addEventListener(\"click\", (e) => {\n      this.queuedActions.push(GameEvent.RESTART)\n    })\n  }\n\n  private loop(time: any) {\n    const now = performance.now()\n    this.update((now - this.lastTick) / 1000.0)\n    this.draw()\n    this.lastTick = now\n    requestAnimationFrame(this.loop.bind(this))\n  }\n\n  private draw() {\n    this.board.draw()\n    this.drawNextPiece(this.nextPiece)\n  }\n\n  private update(ticks: number) {\n    this.handleNextEvent()\n\n    if (this.paused) return\n\n    this.dt += ticks\n    if (this.dt > this.step) {\n      this.dt -= this.step\n      this.needNewPiece = this.board.movePieceDown()\n    }\n\n    if (this.needNewPiece) {\n      if (this.board.activePiece.isAtTop()) {\n        this.queuedActions = Array.of(GameEvent.GAME_OVER)\n        this.needNewPiece = false\n        return\n      }\n\n      this.needNewPiece = false\n      this.board.lockPiece()\n      this.board.activePiece = this.nextPiece\n      this.nextPiece = Piece.randomPiece(this.width, this.tileSize)\n    }\n\n    const linesCleared = this.board.clearLines()\n    this.updateStats(linesCleared)\n  }\n\n  /**\n   * Perform actions based off the current event.\n   *\n   * @param event The most recent event on top of the event queue.\n   */\n  private handleNextEvent() {\n    const event = this.queuedActions.shift()\n    if (event === undefined) return\n\n    switch (event) {\n      case GameEvent.HARD_DOWN:\n      case GameEvent.MOVE_DOWN:\n      case GameEvent.MOVE_LEFT:\n      case GameEvent.MOVE_RIGHT:\n      case GameEvent.ROTATE: {\n        this.board.handleEvent(event)\n        break\n      }\n      case GameEvent.PAUSE: {\n        this.pauseGame()\n        break\n      }\n      case GameEvent.UNPAUSE: {\n        this.unpauseGame()\n        break\n      }\n      case GameEvent.AUDIO_START: {\n        this.audioPlaying = true\n        this.switchAudioButton()\n        break\n      }\n      case GameEvent.AUDIO_STOP: {\n        this.audioPlaying = false\n        this.switchAudioButton()\n        break\n      }\n      case GameEvent.RESTART: {\n        this.reset()\n        break\n      }\n      case GameEvent.GAME_OVER: {\n        this.running = false\n        this.gameOver()\n        break\n      }\n    }\n  }\n\n  /**\n   * Draw the next piece to be put in play.\n   * @param toDraw The piece to draw in the window\n   */\n  private drawNextPiece(toDraw: Piece) {\n    const ctx = this.nextPieceContainer.getContext('2d') as CanvasRenderingContext2D\n    clearNextPiece(ctx, this.nextPiece)\n    drawNextPiece(ctx, this.nextPiece)\n  }\n\n  /**\n   * Change the background to reflect the current level of the game.\n   */\n  private updateBackground() {\n    document.body.style.backgroundColor = Backgrounds[this.level]\n  }\n\n  /**\n   * Update the line count, the score, and the level each time the lines are\n   * cleared.\n   * \n   * @param linesCleared The number of lines cleared.\n   */\n  private updateStats(linesCleared: number) {\n    const levelEl = document.getElementById(\"level\") as HTMLElement\n    const linesEl = document.getElementById(\"lines\") as HTMLElement\n    const scoreEl = document.getElementById(\"score\") as HTMLElement\n\n    this.lines += linesCleared\n    linesEl.textContent = `${this.lines}`\n\n    this.score += this.getScoreForLines(linesCleared)\n    scoreEl.textContent = `${this.score}`\n\n    if (this.shouldIncreaseLevel()) {\n      this.level++\n      this.step = this.step - 0.1\n      this.updateBackground()\n    }\n    levelEl.textContent = `${this.level}`\n  }\n\n  /**\n   * Pause the game and show the overlay.\n   */\n  private pauseGame() {\n    this.paused = true\n    const overlay = document.getElementById(\"pause-overlay\")\n    if (overlay) overlay.style.display = \"block\"\n  }\n\n  /**\n   * Unpause the game and remove the overlay.\n   */\n  private unpauseGame() {\n    this.paused = false\n    const overlay = document.getElementById(\"pause-overlay\")\n    if (overlay) overlay.style.display = \"none\"\n    requestAnimationFrame(this.loop.bind(this))\n  }\n\n  /**\n   * End the game and show the overlay.\n   */\n  private gameOver() {\n    const overlay = document.getElementById(\"overlay\")\n    if (overlay) overlay.style.display = \"block\"\n  }\n\n  /**\n   * Restart the game from scratch.\n   */\n  private reset() {\n    const overlay = document.getElementById(\"overlay\")\n    if (overlay) overlay.style.display = \"none\"\n\n    this.running = true\n    this.paused = false\n    this.lines = 0\n    this.score = 0\n    this.level = 0\n    this.step = 1.1\n    this.nextPiece = Piece.randomPiece(this.width, this.tileSize)\n\n    this.board.reset()\n    this.updateBackground()\n    requestAnimationFrame(this.loop.bind(this))\n  }\n\n  private switchAudioButton() {\n    const audioMutedButton = document.getElementById(\"btn-audio-muted\") as HTMLImageElement\n    const audioPlayingButton = document.getElementById(\"btn-audio-playing\") as HTMLImageElement\n    if (this.audioPlaying) {\n      audioPlayingButton.style.display = \"inline-block\"\n      audioMutedButton.style.display = \"none\"\n    } else {\n      audioPlayingButton.style.display = \"none\"\n      audioMutedButton.style.display = \"inline-block\"\n    }\n  }\n\n  /**\n   * Determine the score for the number of lines cleared.\n   * 1 line: 40 * (level + 1)\n   * 2 lines: 100 * (level + 1)\n   * 3 lines: 300 * (level + 1)\n   * 4 lines: 1200 * (level + 1)\n   *\n   * @param lines The number of lines cleared\n   */\n  private getScoreForLines(lines: number): number {\n    const multipliers = [0, 40, 100, 300, 1200]\n    return multipliers[lines] * (this.level + 1)\n  }\n\n  /**\n   * Determine whether or not the level should be increased. The level should\n   * be Math.floor(lines / 10), i.e. level 2 once 20 lines, level 3 once 30\n   * lines, etc.\n   */\n  private shouldIncreaseLevel(): boolean {\n    if (this.level === 10) return false // max level\n    return (this.lines >= (this.level + 1) * 10)\n  }\n}\n\nconst container = document.getElementById(\"game\") as HTMLCanvasElement\nconst game = new Tetris(container)\ngame.start()\n"]}