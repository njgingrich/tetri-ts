{"version":3,"sources":["src/util/index.ts","src/model/color.ts","src/model/shape.ts","src/model/piece.ts","src/model/keys.ts","src/model/board.ts","src/index.ts"],"names":[],"mappings":"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","file":"37b3b555bd92e05828ed5f1dc323386e.map","sourcesContent":["export function addClass(node: HTMLElement, classes: string) {\n  if (node.className) {\n    node.className += \" \" + classes\n  } else {\n    node.className = classes\n  }\n}\n\nexport function drawSquare(x: number, y: number, ctx: CanvasRenderingContext2D, size: number) {\n  ctx.fillRect(x * size, y * size, size, size)\n  const ss = ctx.strokeStyle\n  ctx.strokeStyle = \"#222222\"\n  ctx.strokeRect(x * size, y * size, size, size)\n  ctx.strokeStyle = ss\n}","export enum Colors {\n  red = 1, blue, green, brown, purple, aqua, orange\n}","// min of 3x3, can be larger\nexport interface Shape extends Array<number[]> {\n  0: [number, number, number]\n  1: [number, number, number]\n  2: [number, number, number]\n}\n\nexport class Tetromino {\n  shape: Shape\n  type: TetrominoType\n  rotation: number\n\n  constructor(type: TetrominoType, rotation = 0) {\n    this.type = type\n    this.rotation = rotation\n    this.shape = Shapes[type][this.rotation]\n  }\n}\n\nexport enum TetrominoType {\n  SQUARE = 1,\n  LINE,\n  L,\n  J,\n  T,\n  S,\n  Z\n}\n\n/**\n * Each shape is stored in a 5x5 array because the 4x4 piece moves when rotated.\n * Each rotation of the shape is stored in each object.\n */\nexport const Shapes = {\n  [TetrominoType.SQUARE]: [\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 0],\n    ] as Shape,\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 0],\n    ] as Shape,\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 0],\n    ] as Shape,\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 0],\n    ] as Shape\n  ],\n  [TetrominoType.LINE]: [\n    [\n      [0, 0, 0, 0],\n      [2, 2, 2, 2],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ] as Shape,\n    [\n      [0, 0, 2, 0],\n      [0, 0, 2, 0],\n      [0, 0, 2, 0],\n      [0, 0, 2, 0],\n    ] as Shape,\n    [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [2, 2, 2, 2],\n      [0, 0, 0, 0],\n    ] as Shape,\n    [\n      [0, 2, 0, 0],\n      [0, 2, 0, 0],\n      [0, 2, 0, 0],\n      [0, 2, 0, 0],\n    ] as Shape\n  ],\n  [TetrominoType.L]: [\n    [\n      [0, 0, 3],\n      [3, 3, 3],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 3, 0],\n      [0, 3, 0],\n      [0, 3, 3]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [3, 3, 3],\n      [3, 0, 0]\n    ] as Shape,\n    [\n      [3, 3, 0],\n      [0, 3, 0],\n      [0, 3, 0]\n    ] as Shape\n  ],\n  [TetrominoType.J]: [\n    [\n      [4, 0, 0],\n      [4, 4, 4],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 4, 4],\n      [0, 4, 0],\n      [0, 4, 0]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [4, 4, 4],\n      [0, 0, 4]\n    ] as Shape,\n    [\n      [0, 4, 0],\n      [0, 4, 0],\n      [4, 4, 0]\n    ] as Shape\n  ],\n  [TetrominoType.S]: [\n    [\n      [0, 5, 5],\n      [5, 5, 0],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 5, 0],\n      [0, 5, 5],\n      [0, 0, 5]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [0, 5, 5],\n      [5, 5, 0]\n    ] as Shape,\n    [\n      [5, 0, 0],\n      [5, 5, 0],\n      [0, 5, 0]\n    ] as Shape\n  ],\n  [TetrominoType.Z]: [\n    [\n      [6, 6, 0],\n      [0, 6, 6],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 0, 6],\n      [0, 6, 6],\n      [0, 6, 0]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [6, 6, 0],\n      [0, 6, 6]\n    ] as Shape,\n    [\n      [0, 6, 0],\n      [6, 6, 0],\n      [6, 0, 0]\n    ] as Shape\n  ],\n  [TetrominoType.T]: [\n    [\n      [0, 7, 0],\n      [7, 7, 7],\n      [0, 0, 0]\n    ] as Shape,\n    [\n      [0, 7, 0],\n      [0, 7, 7],\n      [0, 7, 0]\n    ] as Shape,\n    [\n      [0, 0, 0],\n      [7, 7, 7],\n      [0, 7, 0]\n    ] as Shape,\n    [\n      [0, 7, 0],\n      [7, 7, 0],\n      [0, 7, 0]\n    ] as Shape\n  ]\n}\n","import { TetrominoType, Shape, Shapes } from './shape'\nimport { Colors } from './color'\nimport { drawSquare } from '../util'\n\nexport class Piece {\n  type: TetrominoType\n  rotation: number\n  shape: Shape\n  row: number\n  col: number\n  boardWidth: number\n  boardHeight: number\n  color: string\n  ctx: CanvasRenderingContext2D\n  size: number\n  collides: Function\n  setOnBoard: Function\n\n  constructor(type: TetrominoType,\n              boardWidth: number,\n              collides: Function,\n              setOnBoard: Function,\n              ctx: CanvasRenderingContext2D,\n              size: number) {\n\n    this.type = type\n    this.color = Colors[this.type]\n    this.rotation = 0\n    this.shape = Shapes[this.type][this.rotation]\n\n    this.row = -2 // y\n    this.col = (boardWidth / 2) - Math.ceil(this.shape.length / 2); // x\n    this.ctx = ctx\n    this.size = size\n    this.boardWidth = boardWidth\n    this.collides = collides\n    this.setOnBoard = setOnBoard\n  }\n\n  public draw() {\n    this.fill(Colors[this.type])\n  }\n\n  public clear() {\n    this.fill(\"white\")\n  }\n\n  public left() {\n    if (this.collides(this, -1, 0, this.shape)) {\n      return\n    }\n\n    this.clear()\n    this.col--\n    this.draw()\n  }\n\n  public right() {\n    if (this.collides(this, 1, 0, this.shape)) {\n      return\n    }\n\n    this.clear()\n    this.col++\n    this.draw()\n  }\n\n  public down(): Piece | boolean {\n    if (this.collides(this, 0, 1, this.shape)) {\n      if (this.set()) return true\n      return this.randomPiece()\n    }\n\n    this.clear()\n    this.row++\n    this.draw()\n    return false\n  }\n\n  public rotate() {\n    const nextRotation = Shapes[this.type][(this.rotation + 1) % 4]\n    let nudge = 0\n\n    if (this.collides(this, 0, 0, nextRotation)) {\n      nudge = this.col > this.boardWidth / 2 ? -1 : 1\n    }\n\n\n    if (this.collides(this, nudge, 0, nextRotation)) {\n      return\n    }\n\n    this.clear()\n    this.col += nudge\n    this.rotation = (this.rotation + 1) % 4\n    this.shape = Shapes[this.type][this.rotation]\n    this.draw()\n  }\n  \n  public set() {\n    for (let r = 0; r < this.shape.length; r++) {\n      for (let c = 0; c < this.shape.length; c++) {\n        if (!this.shape[r][c]) continue\n\n        if (this.row + r < 0) {\n          console.log(\"You lose\")\n          return\n        }\n\n        this.setOnBoard(this.row + r, this.col + c, this.type)\n      }\n    }\n  }\n\n  public static getRandomType(): number {\n    return Math.floor(Math.random() * 7) + 1\n  }\n\n  private randomPiece(): Piece {\n    return new Piece(Piece.getRandomType(),\n                     this.boardWidth,\n                     this.collides,\n                     this.setOnBoard,\n                     this.ctx,\n                     this.size)\n  }\n  \n  private fill(fillstyle: string) {\n    for (let r = 0; r < this.shape.length; r++) {\n      for (let c = 0; c < this.shape.length; c++) {\n        let cell = this.shape[r][c]\n        if (cell > 0) {\n          this.ctx.fillStyle = fillstyle\n          drawSquare(this.col + c, this.row + r, this.ctx, this.size)\n        }\n      }\n    }\n  }\n}","export enum Keys {\n  UP = 38,\n  DOWN = 40,\n  LEFT = 37,\n  RIGHT = 39,\n  A = 65,\n  D = 68,\n  W = 87,\n  S = 83,\n}","import { TetrominoType, Shape, Shapes } from './shape'\nimport { addClass, drawSquare } from '../util'\nimport { Colors } from './color'\nimport { Piece } from './piece';\nimport { Keys } from './keys'\n\n// For now, equivalent to number[][] but may introduce stricter typing\n// i.e. [22][10], 22 rows of width 10\nexport interface BoardGrid extends Array<Array<number>> {}\n\nexport class Board {\n  grid: BoardGrid\n  width: number\n  height: number\n  container: HTMLCanvasElement\n  ctx: CanvasRenderingContext2D\n  tileSize: number // in px\n  activePiece: Piece\n  \n  constructor(container: HTMLCanvasElement, width = 10, height = 20) {\n    this.width = width\n    this.height = height\n    this.container = container\n    this.ctx = this.container.getContext('2d') as CanvasRenderingContext2D\n\n    this.tileSize = 32\n    this.container.width = (this.width * this.tileSize)\n    this.container.height = (this.height * this.tileSize)\n    this.grid = this.initGrid()\n  }\n\n  public draw() {\n    for (let r = 0; r < this.height; r++) {\n      let row = this.grid[r]\n      \n      for (let c = 0; c < this.width; c++) {\n        let cell = row[c]\n\n        this.ctx.fillStyle = cell > 0 ? Colors[cell] : \"white\"\n        drawSquare(c, r, this.ctx, this.tileSize)\n      }\n    }\n  }\n\n  public setActivePiece(shape: TetrominoType) {\n    this.activePiece = new Piece(shape,\n                                 this.width,\n                                 this.collides.bind(this),\n                                 this.setOnBoard.bind(this),\n                                 this.ctx,\n                                 this.tileSize)\n  }\n\n  public drawPiece() {\n    this.activePiece.draw()\n  }\n\n  public clearLines(): number {\n    let numLines = 0\n\n    for (let row = 0; row < this.height; row++) {\n      let line = this.grid[row].filter(el => el === 0).length === 0\n\n      if (line) {\n        numLines++\n\n        for (let r = row; r > 0; r--) {\n          for (let c = 0; c < this.width; c++) {\n            this.grid[r][c] = this.grid[r-1][c]\n          }\n        }\n        for (let c = 0; c < this.width; c++) {\n          this.grid[0][c] = 0\n        }\n      }\n    }\n    return numLines\n  }\n  \n  public getInput(e: KeyboardEvent) {\n    if (e.keyCode === Keys.UP || e.keyCode === Keys.W) {\n      this.activePiece.rotate()\n    }\n    if (e.keyCode === Keys.DOWN || e.keyCode === Keys.S) {\n      this.activePiece.down()\n    }\n    if (e.keyCode === Keys.LEFT || e.keyCode === Keys.A) {\n      this.activePiece.left()\n    }\n    if (e.keyCode === Keys.RIGHT || e.keyCode === Keys.D) {\n      this.activePiece.right()\n    }\n  }\n\n  private initGrid(): BoardGrid {\n    let rows = []\n    for (let r = 0; r < this.height; r++) {\n      let cells = []\n      for (let c = 0; c < this.width; c++) {\n        cells.push(0)\n      }\n      rows.push(cells)\n    }\n\n    return rows\n  }\n\n  private setOnBoard(row: number, col: number, type: TetrominoType) {\n    this.grid[row][col] = type\n  }\n  \n  private collides(piece: Piece, dx: number, dy: number, nextShape: Shape) {\n    for (let r = 0; r < nextShape.length; r++) {\n      for (let c = 0; c < nextShape.length; c++) {\n        let cell = nextShape[r][c]\n        if (cell === 0) continue\n\n        let x = piece.col + c + dx\n        let y = piece.row + r + dy\n        if (y >= this.height || x < 0 || x >= this.width) {\n          return true\n        }\n        if (y < 0) continue\n        if (this.grid[y][x]) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n}","import { Board } from './model/board'\nimport { Piece } from './model/piece'\nimport { TetrominoType } from './model/shape';\n\nclass Tetris {\n  board: Board\n  container: HTMLCanvasElement\n  newPiece: boolean\n  lines: number\n  score: number\n\n\n  limit: number\n  lastFrameTimeMs: number\n  maxFPS: number\n  delta: number\n  timestep: number\n  fps: number\n  framesThisSecond: number\n  lastFpsUpdate: number\n  gravity: number\n\n  constructor(container: HTMLCanvasElement) {\n    this.container = container\n    this.board = new Board(this.container)\n    this.newPiece = true\n    this.lines = 0\n    this.score = 0\n\n    this.limit = 300\n    this.lastFrameTimeMs = 0\n    this.maxFPS = 60\n    this.delta = 0\n    this.timestep = 1000 / 60\n    this.fps = 60\n    this.framesThisSecond = 0\n    this.lastFpsUpdate = 0\n    this.gravity = 40\n  }\n\n  public start() {\n    this.getInput()\n    this.board.setActivePiece(Piece.getRandomType())\n    requestAnimationFrame(this.gameLoop.bind(this))\n  }\n\n  private getInput() {\n    document.body.addEventListener(\"keydown\", this.board.getInput.bind(this.board), false)\n  }\n\n  private gameLoop(timestamp: any) {\n    if (timestamp < this.lastFrameTimeMs + ((1000 / this.maxFPS) * this.gravity)) {\n      requestAnimationFrame(this.gameLoop.bind(this))\n      return\n    }\n    this.delta += timestamp - this.lastFrameTimeMs\n    this.lastFrameTimeMs = timestamp\n\n    if (timestamp > this.lastFpsUpdate + 1000) {\n      this.fps = 0.25 * this.framesThisSecond + 0.75 * this.fps\n\n      this.lastFpsUpdate = timestamp\n      this.framesThisSecond = 0\n    }\n\n    this.framesThisSecond++\n    let numUpdateSteps = 0\n    while (this.delta >= this.timestep) {\n      this.delta -= this.timestep\n        if (++numUpdateSteps >= 240) {\n          break\n        }\n    }\n    this.draw()\n    requestAnimationFrame(this.gameLoop.bind(this))\n  }\n\n  private draw() {\n    this.board.draw()\n    this.board.drawPiece()\n    const newPiece = this.board.activePiece.down()\n    this.lines += this.board.clearLines()\n    if (newPiece instanceof Piece) this.board.activePiece = newPiece\n  }\n}\n\nconst container = document.getElementById(\"game\") as HTMLCanvasElement\nconst game = new Tetris(container)\ngame.start()"]}