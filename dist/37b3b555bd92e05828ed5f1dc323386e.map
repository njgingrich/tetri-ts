{"version":3,"sources":["src/model/board.ts","src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;IAKE,eAAY,KAAU,EAAE,MAAW;QAAvB,sBAAA,EAAA,UAAU;QAAE,uBAAA,EAAA,WAAW;QACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;IAC7B,CAAC;IAEM,oBAAI,GAAX;QACE,IAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QAC/C,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,IAAI,YAAY,CAAC,CAAC,CAAC,WAAW,CAAA;QAE7F,GAAG,CAAC,CAAY,UAAS,EAAT,KAAA,IAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS;YAApB,IAAI,GAAG,SAAA;YACV,IAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;YAC3C,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAA;YAErE,GAAG,CAAC,CAAW,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG;gBAAb,IAAI,EAAE,YAAA;gBACT,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;gBAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,MAAM,CAAA;gBACpE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;aACxB;YAED,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;SAC7B;QAED,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;IACtC,CAAC;IAEO,wBAAQ,GAAhB;QACE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;IAC3D,CAAC;IACH,YAAC;AAAD,CAlCA,AAkCC,IAAA;AAlCY,sBAAK;;;;;ACJlB,uCAAqC;AAErC;IAGE;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,aAAK,EAAE,CAAA;IAC1B,CAAC;IAEM,sBAAK,GAAZ;QACE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;IACnB,CAAC;IAEO,4BAAW,GAAnB;IAEA,CAAC;IACH,aAAC;AAAD,CAdA,AAcC,IAAA;AAED,IAAM,IAAI,GAAG,IAAI,MAAM,EAAE,CAAA;AACzB,IAAI,CAAC,KAAK,EAAE,CAAA","file":"37b3b555bd92e05828ed5f1dc323386e.map","sourcesContent":["// For now, equivalent to number[][] but may introduce stricter typing\n// i.e. [22][10], 22 rows of width 10\nexport interface BoardGrid extends Array<Array<number>> {}\n\nexport class Board {\n  grid: BoardGrid\n  width: number\n  height: number\n  \n  constructor(width = 10, height = 22) {\n    this.width = width\n    this.height = height\n    this.grid = this.initGrid()\n  }\n\n  public draw() {\n    const container = document.createElement('div')\n    container.className = container.className ? container.className += \" container\" : \"container\"\n\n    for (let row of this.grid) {\n      const rowEl = document.createElement('div')\n      rowEl.className = rowEl.className ? rowEl.className += \" row\" : \"row\"\n\n      for (let ix of row) {\n        const cell = document.createElement('div')\n        cell.className = cell.className ? cell.className += \" cell\" : \"cell\"\n        rowEl.appendChild(cell)\n      }\n\n      container.appendChild(rowEl)\n    }\n\n    document.body.appendChild(container)\n  }\n\n  private initGrid(): BoardGrid {\n    return Array(this.height).fill(Array(this.width).fill(0))\n  }\n}","import { Board } from './model/board'\n\nclass Tetris {\n  board: Board\n\n  constructor() {\n    this.board = new Board()\n  }\n\n  public start() {\n    this.board.draw()\n  }\n\n  private createBoard() {\n\n  }\n}\n\nconst game = new Tetris()\ngame.start()"]}